name: Deploy Backend to AKS

on:
  push:
    branches: [ main ]
    paths:
      - 'workout-motivator-backend/**'
      - '.github/workflows/backend-deploy.yml'

env:
  AZURE_CONTAINER_REGISTRY: workoutmotivatoracr.azurecr.io
  BACKEND_IMAGE_NAME: workout-motivator-backend
  NAMESPACE: workout-motivator
  CLUSTER_NAME: workout-motivator-aks
  RESOURCE_GROUP: WAP

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./workout-motivator-backend
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }},${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max

    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.25'

    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'

    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Create database secrets
      run: |
        kubectl create secret generic db-config \
          --namespace ${{ env.NAMESPACE }} \
          --from-literal=POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --from-literal=DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ secrets.POSTGRES_DB }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Create backend secrets
      run: |
        kubectl create secret generic backend-secrets \
          --namespace ${{ env.NAMESPACE }} \
          --from-literal=JWT_SECRET=${{ secrets.JWT_SECRET }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy database
      run: |
        kubectl apply -f workout-motivator-backend/kubernetes/database/

    - name: Update backend deployment image
      run: |
        kubectl set image deployment/workout-motivator-backend \
          workout-motivator-backend=${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }} \
          --namespace ${{ env.NAMESPACE }}

    - name: Deploy backend
      run: |
        kubectl apply -f workout-motivator-backend/kubernetes/deployment.yml
        kubectl apply -f workout-motivator-backend/kubernetes/service.yml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/workout-motivator-backend --namespace ${{ env.NAMESPACE }}
        kubectl rollout status deployment/postgres --namespace ${{ env.NAMESPACE }}
